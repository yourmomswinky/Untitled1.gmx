<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_building_roof</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Deactivate_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xoff=0//dont change these 
yoff=0
drawx=x //dont change these
drawy=y

stepud=1 //dont worry about this unless you know how to read draw_sprite_warp script

building_height=5.5 //(the smaller the number the taller the building)
building_sprite=spr_building_wall
building_roof=sprite_index //this objects sprite HAS to be the roof of the building .

image_angle=choose(0,90,180,270)//rotate the roof to give the city variety lol

//make the sidewalks around the building (seperate objects because of different depths)
instance_create(x-100,y-100,obj_sidewalk_h)
instance_create(x-100,y+100+33,obj_sidewalk_h)
instance_create(x-100,y-100,obj_sidewalk_v)
instance_create(x+100+33,y-100,obj_sidewalk_v)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawx=xstart+xoff//update the drawing view
drawy=ystart+yoff

//set the view of the building based on where the player is.
if x-obj_player.x&gt;0 then xoff=point_distance(x,0,obj_player.x,0)/building_height
if x-obj_player.x&lt;0 then xoff=-point_distance(x,0,obj_player.x,0)/building_height
if y-obj_player.y&gt;0 then yoff=point_distance(0,y,0,obj_player.y)/building_height
if y-obj_player.y&lt;0 then yoff=-point_distance(0,y,0,obj_player.y)/building_height

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
/*
**  Usage:
**      draw_texture_quad(tex, x1, y1, x2, y2, x3, y3, x4, y4, step)

      x1,y1------------------x2,y2
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
      x3,y3------------------x4,y4
*///draw_texture_quad(tex, x1, y1, x2, y2, x3, y3, x4, y4, step)
{
draw_set_alpha(1)//this stuff right here is what has taken hours to get right, look in the building image indexs and make sure your buildings match the rotations in the sprite! or else some of your walls might be rotated :P eventually ill update a fix to this but for now it works.
if yoff&gt;0draw_sprite_warp(sprite_get_texture(building_sprite,1),xstart-(sprite_height/2),ystart-(sprite_height/2),xstart+(sprite_width/2),ystart-(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,stepud)
if xoff&gt;0 draw_sprite_warp(sprite_get_texture(building_sprite,0),xstart-(sprite_height/2),ystart-(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart-(sprite_height/2),ystart+(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,stepud)
if yoff&lt;0draw_sprite_warp(sprite_get_texture(building_sprite,2),xstart-(sprite_height/2),ystart+(sprite_height/2),xstart+(sprite_width/2),ystart+(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,stepud)
if xoff&lt;0 draw_sprite_warp(sprite_get_texture(building_sprite,1),xstart+(sprite_height/2),ystart-(sprite_height/2),xstart+(sprite_width/2),ystart+(sprite_height/2),xstart+(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,stepud)
}
draw_sprite(building_roof,image_index,drawx,drawy)//draw the roof on top of the building
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
