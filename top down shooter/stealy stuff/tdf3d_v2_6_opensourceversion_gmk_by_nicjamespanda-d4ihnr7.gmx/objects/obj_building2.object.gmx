<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_building2_roof</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Deactivate_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xoff=0
yoff=0
drawx=x
drawy=y
building_height=8 //(the smaller the number the taller the building)
building_sprite=spr_building3
building_roof=sprite_index //this objects sprite HAS to be the roof of the building .

image_angle=choose(0,90,180,270)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawx=xstart+xoff
drawy=ystart+yoff
if x-obj_player.x&gt;0 then xoff=point_distance(x,0,obj_player.x,0)/12
if x-obj_player.x&lt;0 then xoff=-point_distance(x,0,obj_player.x,0)/12
if y-obj_player.y&gt;0 then yoff=point_distance(0,y,0,obj_player.y)/12
if y-obj_player.y&lt;0 then yoff=-point_distance(0,y,0,obj_player.y)/12

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{//draw_sprite_pos(sprite, index, x1, y1, x2, y2, x3, y3, x4, y4, alpha);
//draw_sprite_pos(spr_building_wall,0,  5,5,100,5,5,100,100,100,image_alpha)

/*
**  Usage:
**      draw_texture_quad(tex, x1, y1, x2, y2, x3, y3, x4, y4, step)

      x1,y1------------------x2,y2
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
        |                      |
      x3,y3------------------x4,y4
*/



//draw_texture_quad(tex, x1, y1, x2, y2, x3, y3, x4, y4, step)
//{draw_set_alpha(0.5) draw_sprite(spr_building_sidewalk2,image_index,xstart,ystart)}

{
draw_set_alpha(1)
if yoff&gt;0 draw_sprite_warp(sprite_get_texture(building_sprite,1),xstart-(sprite_height/2),ystart-(sprite_height/2),xstart+(sprite_width/2),ystart-(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,1)
if xoff&gt;0 draw_sprite_warp(sprite_get_texture(building_sprite,0),xstart-(sprite_height/2),ystart-(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart-(sprite_height/2),ystart+(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,1)
if yoff&lt;0 draw_sprite_warp(sprite_get_texture(building_sprite,2),xstart-(sprite_height/2),ystart+(sprite_height/2),xstart+(sprite_width/2),ystart+(sprite_height/2),xstart-(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,1)
if xoff&lt;0 draw_sprite_warp(sprite_get_texture(building_sprite,1),xstart+(sprite_height/2),ystart-(sprite_height/2),xstart+(sprite_width/2),ystart+(sprite_height/2),xstart+(sprite_width/2)+xoff,ystart-(sprite_height/2)+yoff,xstart+(sprite_width/2)+xoff,ystart+(sprite_height/2)+yoff,1)
}
draw_sprite(building_roof,image_index,drawx,drawy)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
