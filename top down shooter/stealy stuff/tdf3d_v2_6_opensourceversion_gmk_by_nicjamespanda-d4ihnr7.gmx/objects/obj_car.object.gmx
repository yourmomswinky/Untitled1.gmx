<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>c_stallion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//READ:***first of all, i wrote all this myself, so credit is required for using the car scripts/step event codes.*****

//car_color=choose(c_aqua,c_olive,c_red,c_fuchsia,c_dkgray,c_green,c_orange,c_lime,c_ltgray,c_purple,c_yellow)

car_color=image_blend // change this to c_green or whichever color to change the car color!, or above is a commented code which selects a random car color for you!
acc=0.1 //CHANGE THIS in step event!!!
friction=0.009 //dont bother changing friction here, friction is all changed within the step event
maxspeed=8 //this is the max speed, altho if you want to change this make sure to change the gear acc in step event!
turnspeed=0 //var used for turning the car, leave at 0 in create event, this is used to hold the adjustment variable for turning, adjust the 'tss' var below for changing the actual 'turn speed'
drift=0 //var used for drifting
direction=image_angle-180
//image_angle+=+choose(random(8),random(-8))
car_angle=image_angle-180
drift_angle=image_angle-180
playercol=0 //player collision, leave at 0
tsr=0 //turnspeed right , leave this at 0
tsl=0 // turn speed left, leave this at 0
l=0 //limitter ,, eg limits turn speed
gear=0// gear changes the acc speed!, leave this at 0
tsmax=10 //the max 'ts' this limits either tsr or tsl!
tss=0.8 //this is how fast the driver can turn the steering wheel, so the higher this number the faster the car will turn basicially, the faster the turning will adjust
dm=0.05 //the lower this number the longer a drift will hold, the higher the faster the drift will end, basicially this is the tire traction variable!
divdspeed=60 // dividing speed, this variable is the dividing number used to adjust the speed when pulling the handbrake, the smaller this number the more powerful the handbrake is, the faster your car will slow down whent the handbrake is pulled.
divspeedturnadj=100 //dividing the speed by this number when turning, the higher this number the less speed is effected by turning!

sprite_index=choose(c_regal,c_lebonham,c_roadster,c_stallion,c_challenger,c_thunderhead,c_portsmouth)//choose a random car sprite from the few car sprites i provided!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this is still a work in progress so yes it has some bugs and yes its not very organized.
//ill be updating this and adjusting it in the next few versions!

if x&gt;room_width then {x=room_width speed=0} if x&lt;0 then {x=0 speed=0} if y&gt;room_height then {y=room_height speed=0} if y&lt;0 then {y=0 speed=0} //this line makes sure the car doesnt leave the room
if x=obj_player.x{
if y=obj_player.y
{
if global.incar=1 {
if keyboard_check(ord('W')) {{if speed&gt;0 friction=0.01} {if speed&gt;0.5 then l=0} if drift&gt;0 then {speed+=+(acc-(drift/50))} else speed+=+acc} else {{if speed&gt;0.5 { friction=speed/100} else friction=0.01}} //the 'go' button :P, this makes the car accelerate
if keyboard_check(ord('S')) speed+=-acc //puts car in reverse

if speed&gt;0 then turnspeed=(((tsl)-(tsr))/(5.5+l)) //if the car is moving, set the turnspeed, (tsl-tsr) (leave the 5.5 unless you really know what your doing, this is the dividing number which makes it so the car doesnt turn freaky fast, if you want to change the turning speed read up the create event under 'tss')
if speed&lt;0 then turnspeed=-(((tsl)-(tsr))/(5.5+l)) //same as the last line but for reverse, nothing really changed here
image_angle+=+turnspeed //adjust the car angle based on the turning
if speed&gt;0 then {if turnspeed&gt;0 then image_angle+=+(drift) if turnspeed&lt;0 then image_angle+=-(drift)} //makes sure the car drifts in the proper direction, note the variable turnspeed is not actually the 'turning speed' it just holds either a - value for left or a + value for right

if keyboard_check(ord('A')) then {if tsl&lt;tsmax then if speed&gt;0 {tsl+=+tss+(speed/10)} else {tsl+=+tss+(-speed/10)}}//
if keyboard_check(ord('D')) then {if tsr&lt;tsmax then if speed&gt;0 {tsr+=+tss+(speed/10)} else {tsr+=+tss+(-speed/10)}}
if tsl&gt;0 then tsl+=-(tss-0.1)
if tsr&gt;0 then tsr+=-(tss-0.1)//adjusts the turning speed (ts stands for turnspeed)
if tsl&lt;0 then tsl=0
if tsr&lt;0 then tsr=0
if speed&lt;0 then l=0 //the l variable initiates once the car is rolling slowly, to prevent unrealistic turning at very slow speeds.
if speed=0 then { turnspeed=0 speed=0 tsl=0 tsr=0 l=0}//if the speed is 0 the car wont turn
if speed&lt;2 then {if speed&gt;0 {if !keyboard_check(ord('W')) then {if l&lt;6 then l+=+0.175}}} else {if l&gt;0 l+=-0.1}//like i said 2 lines ago, this is the l variable
if speed&gt;maxspeed then speed=maxspeed //limit the car speed
if speed&lt;-maxspeed/1.5 then speed=-maxspeed/1.5 //limit the car speed in reverse
if drift&gt;0 then drift+=-dm //if the car is drifting slowly decrease the drift, change 'dm' var in create event
if speed&lt;-0.5 then friction=-speed/25 //friction of the car in reverse, change the div number (25) lower to increase friction, higher to decrease friction
if speed&lt;0 { if speed&gt;-0.5 {friction=0.01 {if tsl&gt;0 then tsl+=-0.7 if tsr&gt;0 then tsr+=-0.7}}} //if car is below zero but above -0.5 then change the friction and adjust the tsr and tsl

if keyboard_check(vk_space) then {if speed&gt;0 then {speed+=-(speed/divdspeed)} if speed&lt;0 then {speed+=+(-speed/(divdspeed/2))} if drift&lt;speed/4 then drift+=+(speed/4.5)}
speed+=-((drift/100)) //if space is pressed (handbrake) start the drift and adjust the speed based on braking.

if turnspeed&gt;0 speed+=-turnspeed/divspeedturnadj //if the car is turning slightly subtract the speed
if turnspeed&lt;0 speed+=+turnspeed/divspeedturnadj //same as above ^
//gears
if speed&gt;=0 then gear=0 //change the gears depending on the speed of the car
if speed&gt;2 then gear=1
if speed&gt;4 then gear=2
if speed&gt;5 then gear=3
if speed&gt;6 then gear=4
if speed&gt;7 then gear=5
if speed&lt;0 then gear=-1 //-1 is reverse gear
if gear=0 then acc=0.08 //the lower the gear the faster the acceleration
if gear=1 then acc=0.05
if gear=2 then acc=0.04
if gear=3 then acc=0.03
if gear=4 then acc=0.02
if gear=5 then acc=0.015//the higher the gear the slower the acceleration, change these numbers to change the acceleration!

}
}
}
if image_angle&gt;360 then image_angle=0 if image_angle&lt;0 then image_angle=360//these 2 lines here really dont do anything, they just keep the angle values from getting really big or really small, it keeps them within the 360 range, removing these 2 lines wont effect the script at all
if direction&gt;360 then direction=0 if direction&lt;0 then direction=360

direction+= median(-(1.7+((maxspeed-speed)/10)), 1.7+((maxspeed-speed)/10), (((((image_angle-180) - direction) mod 360) + 540) mod 360) - 180)//adjust the direction based on the image angle, this allows for drifting because the directoin adjusts slower than the image_angle does. change the 1.7 variables as needed

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lamp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;

direction=image_angle-180
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
speed+=-(speed/20)
direction=image_angle-180
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_building2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
speed+=-(speed/20)
direction=image_angle-180
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_building">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//collide with the building
var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
speed+=-(speed/20) //descrease the speed
direction=image_angle-180 //stop drifting by adjusting the direction strait to the image angle, the reason for the -180 is because the car sprite is facing left, this fixes that!
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the car!
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,car_color,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
